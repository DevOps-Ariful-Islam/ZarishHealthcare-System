services:
  # Load environment variables from .env file
  env_file:
    - .env
  # Infrastructure Services
  postgres:
    image: postgres:15-alpine
    container_name: zarish-postgres
      environment:
        POSTGRES_DB: ${POSTGRES_DB}
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./infrastructure/database/init:/docker-entrypoint-initdb.d
    networks:
      - zarish-network

  redis:
    image: redis:7-alpine
    container_name: zarish-redis
    ports:
      - "6379:6379"
    networks:
      - zarish-network

  couchdb:
    image: couchdb:3.3
    container_name: zarish-couchdb
      environment:
        COUCHDB_USER: ${COUCHDB_USER}
        COUCHDB_PASSWORD: ${COUCHDB_PASSWORD}
    ports:
      - "5984:5984"
    volumes:
      - couchdb_data:/opt/couchdb/data
    networks:
      - zarish-network

  # API Gateway
  kong:
    image: kong:3.4
    container_name: zarish-kong
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /kong/declarative/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: "0.0.0.0:8001"
    ports:
      - "8000:8000"  # Proxy
      - "8001:8001"  # Admin API
    volumes:
      - ./infrastructure/kong/kong.yml:/kong/declarative/kong.yml
    networks:
      - zarish-network

  # Identity & Access Management
  zarish-access:
    build:
      context: .
      dockerfile: ./services/zarish-access/Dockerfile
    container_name: zarish-access
      environment:
        DATABASE_URL: ${DATABASE_URL}
        REDIS_URL: ${REDIS_URL}
        JWT_SECRET: ${JWT_SECRET}
        PORT: 8080
    ports:
      - "3001:8080"
    depends_on:
      - postgres
      - redis
    networks:
      - zarish-network

  # Clinical Management Service
  zarish-care:
    build:
      context: .
      dockerfile: ./services/zarish-care/Dockerfile
    container_name: zarish-care
      environment:
        DATABASE_URL: ${DATABASE_URL}
        COUCHDB_URL: ${COUCHDB_URL}
        REDIS_URL: ${REDIS_URL}
        AUTH_SERVICE_URL: ${AUTH_SERVICE_URL}
        PORT: 8080
    ports:
      - "3002:8080"
    depends_on:
      - postgres
      - couchdb
      - redis
      - zarish-access
    networks:
      - zarish-network

  # Laboratory Management Service
  zarish-labs:
    build:
      context: .
      dockerfile: ./services/zarish-labs/Dockerfile
    container_name: zarish-labs
      environment:
        DATABASE_URL: ${DATABASE_URL}
        REDIS_URL: ${REDIS_URL}
        AUTH_SERVICE_URL: ${AUTH_SERVICE_URL}
        CARE_SERVICE_URL: ${CARE_SERVICE_URL}
        PORT: 8080
    ports:
      - "3003:8080"
    depends_on:
      - postgres
      - redis
      - zarish-access
      - zarish-care
    networks:
      - zarish-network

  # Operations Management Service
  zarish-ops:
    build:
      context: .
      dockerfile: ./services/zarish-ops/Dockerfile
    container_name: zarish-ops
      environment:
        DATABASE_URL: ${DATABASE_URL}
        REDIS_URL: ${REDIS_URL}
        AUTH_SERVICE_URL: ${AUTH_SERVICE_URL}
        PORT: 8080
    ports:
      - "3004:8080"
    depends_on:
      - postgres
      - redis
      - zarish-access
    networks:
      - zarish-network

  # Analytics Service
  zarish-analytix:
    build:
      context: .
      dockerfile: ./services/zarish-analytics/Dockerfile
    container_name: zarish-analytix
      environment:
        DATABASE_URL: ${DATABASE_URL}
        REDIS_URL: ${REDIS_URL}
        AUTH_SERVICE_URL: ${AUTH_SERVICE_URL}
        PORT: 8080
    ports:
      - "3005:8080"
    depends_on:
      - postgres
      - redis
      - zarish-access
    networks:
      - zarish-network

  # Data Synchronization Service
  zarish-sync:
    build:
      context: .
      dockerfile: ./services/zarish-sync/Dockerfile
    container_name: zarish-sync
      environment:
        DATABASE_URL: ${DATABASE_URL}
        COUCHDB_URL: ${COUCHDB_URL}
        REDIS_URL: ${REDIS_URL}
        AUTH_SERVICE_URL: ${AUTH_SERVICE_URL}
        PORT: 8080
    ports:
      - "3006:8080"
    depends_on:
      - postgres
      - couchdb
      - redis
      - zarish-access
    networks:
      - zarish-network

  # Clinical Dashboard
  zarish-portal:
    build:
      context: .
      dockerfile: ./apps/clinical-dashboard/Dockerfile
    container_name: zarish-portal
    environment:
      NEXT_PUBLIC_API_GATEWAY_URL: http://localhost:8000
      NEXT_PUBLIC_APP_NAME: ZarishHealthcare
      PORT: 3000
    ports:
      - "3000:3000"
    depends_on:
      - kong
    networks:
      - zarish-network

volumes:
  postgres_data:
  couchdb_data:

networks:
  zarish-network:
    driver: bridge