# Prometheus Configuration for ZarishHealthcare System
# Comprehensive metrics collection for humanitarian healthcare services

apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: zarish-monitoring
  labels:
    app: prometheus
    component: config
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
      external_labels:
        cluster: zarish-healthcare-production
        environment: humanitarian-healthcare
        organization: zarish-sphere
        region: multi-region
    
    alerting:
      alertmanagers:
        - static_configs:
            - targets:
              - alertmanager:9093

    rule_files:
      - "/etc/prometheus/rules/*.yml"

    scrape_configs:
      # Prometheus itself
      - job_name: prometheus
        static_configs:
          - targets: ['localhost:9090']
        metrics_path: /metrics
        scrape_interval: 30s

      # Kubernetes API Server
      - job_name: kubernetes-api-server
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - default
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: default;kubernetes;https

      # Kubernetes Nodes
      - job_name: kubernetes-nodes
        kubernetes_sd_configs:
          - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics

      # Kubernetes Pods
      - job_name: kubernetes-pods
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - zarish-healthcare
                - zarish-monitoring
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name

      # ZarishCare - Clinical Management Service
      - job_name: zarish-care
        kubernetes_sd_configs:
          - role: service
            namespaces:
              names:
                - zarish-healthcare
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: zarish-care
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
        metrics_path: /metrics
        scrape_interval: 30s
        scrape_timeout: 10s

      # ZarishLabs - Laboratory Management Service
      - job_name: zarish-labs
        kubernetes_sd_configs:
          - role: service
            namespaces:
              names:
                - zarish-healthcare
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: zarish-labs
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
            action: keep
            regex: true
        metrics_path: /metrics
        scrape_interval: 30s
        scrape_timeout: 10s

      # ZarishOps - Operations Coordination Service
      - job_name: zarish-ops
        kubernetes_sd_configs:
          - role: service
            namespaces:
              names:
                - zarish-healthcare
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: zarish-ops
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
            action: keep
            regex: true
        metrics_path: /metrics
        scrape_interval: 30s
        scrape_timeout: 10s

      # ZarishAnalytix - Analytics Service
      - job_name: zarish-analytics
        kubernetes_sd_configs:
          - role: service
            namespaces:
              names:
                - zarish-healthcare
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: zarish-analytics
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
            action: keep
            regex: true
        metrics_path: /metrics
        scrape_interval: 60s  # Longer interval for analytics
        scrape_timeout: 30s

      # ZarishAccess - Identity and Access Management
      - job_name: zarish-access
        kubernetes_sd_configs:
          - role: service
            namespaces:
              names:
                - zarish-healthcare
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: zarish-access
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
            action: keep
            regex: true
        metrics_path: /metrics
        scrape_interval: 15s  # More frequent for security monitoring
        scrape_timeout: 5s

      # ZarishSync - Offline Synchronization Service
      - job_name: zarish-sync
        kubernetes_sd_configs:
          - role: service
            namespaces:
              names:
                - zarish-healthcare
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name]
            action: keep
            regex: zarish-sync
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
            action: keep
            regex: true
        metrics_path: /metrics
        scrape_interval: 30s
        scrape_timeout: 15s

      # PostgreSQL Database
      - job_name: postgresql
        static_configs:
          - targets:
            - postgresql-primary.zarish-healthcare.svc.cluster.local:9187
            - postgresql-replica.zarish-healthcare.svc.cluster.local:9187
        scrape_interval: 30s
        scrape_timeout: 10s
        metrics_path: /metrics

      # Redis Cache
      - job_name: redis
        static_configs:
          - targets:
            - redis.zarish-healthcare.svc.cluster.local:9121
        scrape_interval: 30s
        scrape_timeout: 10s

      # CouchDB (for offline sync)
      - job_name: couchdb
        static_configs:
          - targets:
            - couchdb.zarish-healthcare.svc.cluster.local:9984
        scrape_interval: 30s
        scrape_timeout: 10s

      # Kong API Gateway
      - job_name: kong-gateway
        static_configs:
          - targets:
            - kong:8001
        metrics_path: /metrics
        scrape_interval: 15s

      # Istio Service Mesh Metrics
      - job_name: istio-mesh
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - istio-system
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: istio-proxy;http-monitoring
        scrape_interval: 15s

      # Istio Pilot
      - job_name: istio-pilot
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - istio-system
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: istio-pilot;http-monitoring

      # Istio Galley
      - job_name: istio-galley
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - istio-system
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: istio-galley;http-monitoring

      # Istio Citadel
      - job_name: istio-citadel
        kubernetes_sd_configs:
          - role: endpoints
            namespaces:
              names:
                - istio-system
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: istio-citadel;http-monitoring

      # Node Exporter
      - job_name: node-exporter
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - source_labels: [__meta_kubernetes_endpoints_name]
            regex: 'node-exporter'
            action: keep

      # cAdvisor (Container metrics)
      - job_name: cadvisor
        kubernetes_sd_configs:
          - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor

      # Blackbox Exporter for synthetic monitoring
      - job_name: blackbox-http
        metrics_path: /probe
        params:
          module: [http_2xx]
        static_configs:
          - targets:
            - https://api.zarish.humanitarian.health/health
            - https://dashboard.zarish.humanitarian.health
            - https://mobile.zarish.humanitarian.health/health
            - https://sync.zarish.humanitarian.health/health
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: blackbox-exporter:9115
        scrape_interval: 30s
        scrape_timeout: 10s

      # DNS monitoring
      - job_name: blackbox-dns
        metrics_path: /probe
        params:
          module: [dns]
        static_configs:
          - targets:
            - zarish.humanitarian.health
            - api.zarish.humanitarian.health
            - dashboard.zarish.humanitarian.health
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: blackbox-exporter:9115

      # TCP endpoint monitoring
      - job_name: blackbox-tcp
        metrics_path: /probe
        params:
          module: [tcp_connect]
        static_configs:
          - targets:
            - postgresql-primary.zarish-healthcare.svc.cluster.local:5432
            - redis.zarish-healthcare.svc.cluster.local:6379
            - couchdb.zarish-healthcare.svc.cluster.local:5984
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: blackbox-exporter:9115

---
# Prometheus Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: zarish-monitoring
  labels:
    app: prometheus
    component: server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
      component: server
  template:
    metadata:
      labels:
        app: prometheus
        component: server
    spec:
      serviceAccountName: prometheus
      containers:
        - name: prometheus
          image: prom/prometheus:v2.45.0
          args:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus/'
            - '--web.console.libraries=/etc/prometheus/console_libraries'
            - '--web.console.templates=/etc/prometheus/consoles'
            - '--storage.tsdb.retention.time=15d'
            - '--storage.tsdb.retention.size=50GB'
            - '--web.enable-lifecycle'
            - '--web.enable-admin-api'
            - '--query.max-concurrency=20'
            - '--query.timeout=2m'
          ports:
            - containerPort: 9090
              name: web
              protocol: TCP
          resources:
            requests:
              cpu: 500m
              memory: 2Gi
            limits:
              cpu: 2
              memory: 8Gi
          volumeMounts:
            - name: config-volume
              mountPath: /etc/prometheus/
            - name: prometheus-storage-volume
              mountPath: /prometheus/
            - name: rules-volume
              mountPath: /etc/prometheus/rules/
          livenessProbe:
            httpGet:
              path: /-/healthy
              port: 9090
            initialDelaySeconds: 30
            timeoutSeconds: 10
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /-/ready
              port: 9090
            initialDelaySeconds: 10
            timeoutSeconds: 10
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
      volumes:
        - name: config-volume
          configMap:
            name: prometheus-config
        - name: prometheus-storage-volume
          persistentVolumeClaim:
            claimName: prometheus-storage
        - name: rules-volume
          configMap:
            name: prometheus-rules

---
# Prometheus Service
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: zarish-monitoring
  labels:
    app: prometheus
    component: server
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: '9090'
spec:
  type: ClusterIP
  ports:
    - port: 9090
      targetPort: 9090
      protocol: TCP
      name: web
  selector:
    app: prometheus
    component: server

---
# Prometheus Storage
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-storage
  namespace: zarish-monitoring
  labels:
    app: prometheus
    component: storage
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Gi
  storageClassName: fast-ssd

---
# Prometheus ServiceAccount
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: zarish-monitoring
  labels:
    app: prometheus

---
# Prometheus ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus
  labels:
    app: prometheus
rules:
  - apiGroups: [""]
    resources:
      - nodes
      - nodes/proxy
      - nodes/metrics
      - services
      - endpoints
      - pods
      - ingresses
      - configmaps
    verbs: ["get", "list", "watch"]
  - apiGroups: ["extensions"]
    resources:
      - ingresses
    verbs: ["get", "list", "watch"]
  - apiGroups: ["networking.k8s.io"]
    resources:
      - ingresses
    verbs: ["get", "list", "watch"]
  - nonResourceURLs: ["/metrics"]
    verbs: ["get"]

---
# Prometheus ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
  labels:
    app: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
  - kind: ServiceAccount
    name: prometheus
    namespace: zarish-monitoring